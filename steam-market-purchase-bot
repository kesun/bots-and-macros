var desiredPrice = 0.03;
var desiredPurchaseCount = 1;
var gemName = "Victories";
// DO NOT MODIFY ANYTHING BELOW IF YOU DON'T KNOW WHAT YOU ARE DOING
// *****************************************************************

var purchased = 0;

var windowID = window.open(document.URL, "_blank", "width=500, height=300");

checkReady();

function refresh(){
	//console.log("refresh");
	windowID.location.reload();
	isRefreshing = true;
	if(purchased < desiredPurchaseCount){
		setTimeout(checkReady, 500);
	}
}

function checkReady(){
	//console.log("checkReady");
	var priceListLen = windowID.document.getElementsByClassName('market_listing_their_price').length;
	var listingsLen = windowID.document.getElementsByClassName('market_content_block').length;
	if(windowID.document.getElementsByTagName('zzzzz').length == 0 && listingsLen > 0 && windowID.document.getElementsByClassName('market_listing_table_message').length == 0 && priceListLen > 1){
		checkPrice();
	}else{
		if(listingsLen == 0){
			//windowID.document.getElementsByTagName("html")[0].appendChild(windowID.document.createElement("zzzzz"));
			setTimeout(refresh, 500);
		}else{
			setTimeout(checkReady, 100);
		}
	}
}

function checkPrice(){
	windowID.document.getElementsByTagName("html")[0].appendChild(windowID.document.createElement("zzzzz"));
	var listCounter = 0;
	var listing = g_rgAssets[570][2];
	var foundPos = [];
	var foundMatch = false;
	for(var key in listing){
		listCounter++;
		var curListing = listing[key];
		var desc = curListing["descriptions"];
		var gemPos = -1;
		if(desc != undefined && desc[1] != undefined){
			desc = desc[1]["value"];
			gemPos = desc.indexOf(gemName);
		}
		if(gemName == "" || gemPos != -1){
			foundPos[foundPos.length] = key;
		}
	}
	var listings = windowID.document.getElementsByClassName('item_market_action_button');
	foundPos.sort(function(keyA, keyB){
		var priceA;
		var priceB;
		for(var j = 0; j < listings.length; j++){
			var posA = listings[j].href.indexOf(keyA);
			var posB = listings[j].href.indexOf(keyB);
			if(posA != -1){
				priceA = parseFloat(windowID.document.getElementsByClassName('market_listing_their_price')[j + 1].getElementsByClassName("market_listing_price_with_fee")[0].innerHTML.replace(/\s/g, '').substr(4));
			}
			if(posB != -1){
				priceB = parseFloat(windowID.document.getElementsByClassName('market_listing_their_price')[j + 1].getElementsByClassName("market_listing_price_with_fee")[0].innerHTML.replace(/\s/g, '').substr(4));
			}
		}
		return priceA - priceB;
	});
	if(foundPos.length > 0){
		var priceList = [];
		for(var i = 0; i < foundPos.length && foundMatch == false; i++){
			var curKey = foundPos[i];
			for(var j = 0; j < listings.length && foundMatch == false; j++){
				var pos = listings[j].href.indexOf(curKey);
				//console.log("pos = " + j + " / " + pos);
				if(pos != -1){
					var curPrice = parseFloat(windowID.document.getElementsByClassName('market_listing_their_price')[j + 1].getElementsByClassName("market_listing_price_with_fee")[0].innerHTML.replace(/\s/g, '').substr(4));
					priceList[priceList.length] = curPrice;
					if(curPrice <= desiredPrice){
						foundMatch = true;
						setTimeout(function(){
							var btn = windowID.document.getElementsByClassName('item_market_action_button_contents')[j];
							if(btn == undefined){
								console.log(btn + "is undefined at " + j);
								//checkReady();
							}else{
								windowID.document.getElementsByClassName('item_market_action_button_contents')[j].click();
								windowID.document.getElementById('market_buynow_dialog_accept_ssa').click();
								if(windowID.document.getElementById('market_buynow_dialog_purchase').getAttribute("style") != "display: none;"){
									windowID.document.getElementById('market_buynow_dialog_purchase').getElementsByTagName("span")[0].click();
									checkTransactionState();
								}else{
									console.log("Cannot purchase, check for your balance and whatnot pl0x, then run this script again.");
								}
							}
							
						}, 100);
					}else{
						refresh();
					}
				}
			}
		}
		console.log("Prices of items that match gem criteria: " + priceList);
	}else{
		console.log("Current lowest overall price:", parseFloat(windowID.document.getElementsByClassName('market_listing_their_price')[1].getElementsByClassName("market_listing_price_with_fee")[0].innerHTML.replace(/\s/g, '').substr(4)));
		refresh();
	}
}

function checkTransactionState(){
	if(windowID.document.getElementById('market_buynow_dialog_purchase').innerHTML != ""){ // purchase button visible
		if(windowID.document.getElementById('market_buynow_dialog_error_text').innerHTML != ""){ // error message visible
			refresh();
		}else{ // no error message
			setTimeout(checkTransactionState, 500);
		}
	}else{ // purchase button not visible
		if(windowID.document.getElementById('market_buynow_dialog_purchasecomplete_message').getAttribute('style') == "overflow: visible;"){ // successful purchase
			console.log("Successful purchase!");
			purchased++;
		}
		refresh();
	}
}
